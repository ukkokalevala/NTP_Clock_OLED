#include <WiFi.h>
#include <WiFiUdp.h>
#include <NTPClient.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128  // OLED display width, in pixels
#define SCREEN_HEIGHT 64  // OLED display height, in pixels

#define OLED_RESET    -1  // Set OLED reset pin (-1 if not used)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// WiFi credentials
const char* ssid = "yourSSID";  
const char* password = "yourPASSWORD";

// NTP client setup
WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, "pool.ntp.org", 7200, 60000);  // UTC offset, 60-sec update
//NTPClient timeClient(ntpUDP, "pool.ntp.org", 0, 60000);  // UTC offset, 60-sec update
void setup() {
  Serial.begin(115200);  
  Wire.begin(7, 6);
  // Initialize OLED display
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {  
    Serial.println(F("SSD1306 allocation failed"));
    while (true);  
  }
  display.clearDisplay();
  display.setTextColor(SSD1306_WHITE);

  // Connect to WiFi
  Serial.print("Connecting to WiFi...");
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("Connected to WiFi");

  // Initialize the NTP client
  timeClient.begin();
}

void loop() {
  timeClient.update();  

  // Get the current epoch time
  unsigned long epochTime = timeClient.getEpochTime();

  // Calculate the current date from the epoch time
  int days = epochTime / 86400L;
  int year = 1970;
  while (days >= 365 + (isLeapYear(year) ? 1 : 0)) {
    days -= 365 + (isLeapYear(year) ? 1 : 0);
    year++;
  }
  int month = 1;
  int daysInMonth[] = {31, 28 + (isLeapYear(year) ? 1 : 0), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
  while (days >= daysInMonth[month - 1]) {
    days -= daysInMonth[month - 1];
    month++;
  }
  int day = days + 1;

  // Get time components
  int currentHour = timeClient.getHours();
  int currentMinute = timeClient.getMinutes();

  // Format time and date strings
  String timeText = (currentHour < 10 ? "0" : "") + String(currentHour) + ":" + (currentMinute < 10 ? "0" : "") + String(currentMinute);
  String dateText = String(year) + "-" + (month < 10 ? "0" : "") + String(month) + "-" + (day < 10 ? "0" : "") + String(day);

  // Display on OLED
  display.clearDisplay();
  
  // Display time in large font
  display.setTextSize(2); 
  display.setCursor(10, 10);
  display.print(timeText);

  // Display date in smaller font
  display.setTextSize(1);
  display.setCursor(10, 40);
  display.print(dateText);

  display.display();

  delay(1000);  // Update every second
}

bool isLeapYear(int year) {
  return ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0));
}
